name: Create Draft Release
on:
  push:
    tags: "v*"
jobs:
  make-zip:
    name: Build release zip archive
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Build zip
        run: |
          git archive \
            --format=zip \
            --prefix=AudioDeviceLib-"$(echo ${{github.ref}} | awk -F/ '{print $NF}')/" \
            -o AudioDeviceLib.zip \
            HEAD
      - name: Upload zip
        uses: actions/upload-artifact@v2
        with:
          name: AudioDeviceLib.zip
          path: AudioDeviceLib.zip
  make-cmake-file:
    name: Make CMake file
    needs: make-zip
    runs-on: macos-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: AudioDeviceLib.zip
          path: ${{runner.temp}}/artifacts
      - run: ls -lR ${{runner.temp}}/artifacts
      - uses: actions/checkout@v2
      - name: Get raw tag name
        run: echo "VERSION=$(echo ${{github.ref}} | awk -F/ '{print $NF}')" >> $GITHUB_ENV
      - name: Configure
        run: |
          cmake . \
            -DSOURCE_URL_TYPE=URL \
            -DSOURCE_URL=https://github.com/${{github.repository}}/releases/download/${{env['VERSION']}}/AudioDeviceLib-${{ENV['VERSION']}}.zip \
            -DSOURCE_REF_TYPE=URL_HASH \
            -DSOURCE_REF=SHA512=$(openssl dgst -sha512 "${{runner.temp}}/artifacts/AudioDeviceLib.zip" | cut -f2 '-d ') \
            -DCMAKE_BUILD_TYPE=${{matrix.build-type}} \
            "-DCMAKE_INSTALL_PREFIX=$(echo "${{runner.temp}}/install" | tr "\\\\" /)"
        shell: bash
      - name: Upload AudioDeviceLib.cmake
        uses: actions/upload-artifact@v2
        with:
          name: AudioDeviceLib.cmake
          path: AudioDeviceLib.cmake
  create-release:
    name: Create Release
    needs: [make-zip, make-cmake-file]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts
      - name: List artifacts
        run: ls -lR
      - name: Get raw tag name
        run: echo "VERSION=$(echo ${{github.ref}} | awk -F/ '{print $NF}')" >> $GITHUB_ENV
      - name: Create draft release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{env['VERSION']}}
          release_name: Release ${{env['VERSION']}}
          draft: true
          prerelease: false
      - name: Add zip file to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/AudioDeviceLib.zip/AudioDeviceLib.zip
          asset_name: AudioDeviceLib-${{env['VERSION']}}.zip
          asset_content_type: application/zip
      - name: Add .cmake file to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/AudioDeviceLib.cmake/AudioDeviceLib.cmake
          asset_name: AudioDeviceLib.cmake
          asset_content_type: text/plain
